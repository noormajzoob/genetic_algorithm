import 'package:genetic_algorithm/src/util/error.dart';
import 'fitness_evaluator.dart';

/// A [Chromosome] is the repesentation of one candidate solution, it contain genes represents
/// by [T] type and had [_fitness] mesaure the correctiness of the soultion.
class Chromosome<T> implements Comparable<Chromosome<T>> {
  final T data;
  double? _fitness;

  Chromosome(this.data, this._fitness);
  Chromosome.data(this.data);

  /// Set fitness value of chromosome.
  /// This value is generated by calling [FitnessEvaluator.evaluate] method.
  set fitness(double fitness) {
    _fitness = fitness;
  }

  double get fitness {
    if (_fitness == null) {
      throw GeneticError(
          'The fitness value of the chromosome can\'t be readed before it is evaluted by the Engine.');
    }

    return _fitness!;
  }

  @override
  int compareTo(Chromosome<T> other) => other.fitness.compareTo(fitness);

  @override
  String toString() => 'Chromosome(fitness: $_fitness, data: $data)';
}
